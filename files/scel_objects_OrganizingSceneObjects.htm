<!DOCTYPE html>

<!-- saved from url=(0024)http://docs.autodesk.com -->
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <meta name="product" content="SI">
      <meta name="release" content="2015">
      <meta name="book" content="GeneralUser">
      <meta name="created" content="2014-03-26">
      <meta name="topicid" content="GUID-AA76440D-1918-48AA-8EF7-85F648E13D96">
      <meta name="indexterm" content="objects: organizing into structures">
      <meta name="indexterm" content="groups: versus scene layers, etc.">
      <meta name="indexterm" content="scene layers: versus groups, etc.">
      <meta name="indexterm" content="partitions: versus groups, etc.">
      <meta name="topic-type" content="concept">
      <title>Organizing Scene Objects</title>
      <link rel="stylesheet" type="text/css" href="../style/softimage.css"><script type="text/javascript" src="../scripts/ac_common.js"></script><script type="text/javascript" src="../scripts/utils/adsk.redirect.js"></script></head>
   <body height="100%">
      <div class="body_content" id="body-content"><span class="anchor_wrapper"><a name="GUID-AA76440D-1918-48AA-8EF7-85F648E13D96"></a></span><div class="head">
            <h1>Organizing Scene Objects</h1>
         </div>
         <div class="bodyProcess">
            <p><span class="anchor_wrapper"><a name="GUID-858F6A4B-CECF-4078-BAD6-93CCB09AC8AF"></a></span>There are several different ways in which you can organize the objects in your scene,
               depending on what you need to do: 
            </p><span class="anchor_wrapper"><a name="UL_419DBD4F96BA49D79AA496243EB5B8D2"></a></span><ul>
               <li> 
                  <p><span class="anchor_wrapper"><a name="GUID-FF39F3EC-FA76-4D98-ADB0-70466735B735"></a></span>Groups let you apply properties to all their members. The group property overrides
                     members' local properties. Groups are also convenient for selecting objects, for example,
                     you can add all deformers in a rig to a group for easy picking when enveloping. An
                     object can belong to as many different groups as you want. See <span class="char_link"><a href="objects_GroupingObjects.htm">Grouping Objects</a></span>. 
                  </p> 
               </li>
               <li> 
                  <p><span class="anchor_wrapper"><a name="GUID-47A710F6-111D-415C-AFAC-4E3D60CBB860"></a></span>Scene layers are similar to groups, but each object must belong to exactly one layer.
                     You can apply properties to layers just like groups, but layers are usually used to
                     control visibility, selectability, and renderability. For example, you could create
                     one scene layer for meshes, another for bones and other deformers, and yet another
                     for rig controls, and then display and hide them quickly using the scene layer manager.
                     See <span class="char_link"><a href="scel_layers.htm">Scene Layers</a></span>. 
                  </p> 
               </li>
               <li> 
                  <p><span class="anchor_wrapper"><a name="GUID-8C24A905-A1A5-463B-BA50-C6F6C09E9F5C"></a></span>Partitions let you override properties on specific objects when rendering a particular
                     pass. For example, if you want to render certain objects constant black, you can create
                     a custom pass, add those objects to a new partition, and apply a constant black shader
                     to the partition. Like scene layers, each object must belong to exactly one partition
                     per pass. See <span class="char_link"><a href="render_passes.htm">Passes &amp; Partitions</a></span> [<span class="char_link"><a href="render_cover.htm">Rendering</a></span>]. 
                  </p> 
               </li>
               <li> 
                  <p><span class="anchor_wrapper"><a name="GUID-4D1B6E65-782C-423D-9032-475167A3FE67"></a></span>Hierarchies are series of parent-child relationships between objects, forming a tree-like
                     structure. You can see these relationships as nested nodes in the explorer and as
                     links in the schematic view. Transformations are propagated down hierarchies, with
                     each parent's local transformations being offset from its parent's center. You can
                     also use hierarchies to propagate other properties, but locally-applied properties
                     take precedence over inherited ones. See <span class="char_link"><a href="scel_hierarchies.htm">Hierarchies</a></span>. 
                  </p> 
               </li>
               <li> 
                  <p><span class="anchor_wrapper"><a name="GUID-FED3A256-B76B-407A-A4A7-49241B726A12"></a></span>Transform groups are a specific case of a hierarchy with a null root to control animated
                     transforms. See <span class="char_link"><a href="ani_xform_CreatingTransformGroupsParentingwithNullObjects.htm">Transform Groups (Parenting with Null Objects)</a></span> [<span class="char_link"><a href="ani_cover.htm">Animation</a></span>]. 
                  </p> 
               </li>
               <li> 
                  <p><span class="anchor_wrapper"><a name="GUID-3CCB8E1E-1DC0-4BE5-B893-22C1AAA8E810"></a></span>Models are a hierarchies that can be thought of as "mini-scenes". They have their
                     own namespace, so two models can both have objects called "left_arm". They also have
                     their own animation mixers, so you can control "left_arm" differently in each model.
                     They can also be saved externally and reused by reference in multiple scenes. See
                     <span class="char_link"><a href="data_models.htm">Models</a></span>. 
                  </p> 
               </li>
            </ul>
            <p><span class="anchor_wrapper"><a name="GUID-65E1CA59-8ECF-487C-94E4-0654582412B2"></a></span>For a detailed description of how properties are propagated in groups, layers, partitions,
               and hierarchies, see <span class="char_link"><a href="properties_HowPropertiesArePropagated.htm">How Properties Are Propagated</a></span>. 
            </p>
         </div>
         <div class="footer-block"><a href="../html/ac.cmtdialog.htm" class="comments-anchor" target="_blank"><span class="comments-link">Please send us your comment about this page</span></a></div><br><p class="footer-license-block"><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"><img alt="Creative Commons License" style="border-width: 0;" src="../images/ccLink.png"></a>&nbsp;<em>Except where otherwise noted, this work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>. Please see the <a href="http://autodesk.com/creativecommons" target="_blank">Autodesk Creative Commons FAQ</a> for more information.</em></p><br></div>
   </body>
</html>