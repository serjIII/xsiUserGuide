<!DOCTYPE html>

<!-- saved from url=(0024)http://docs.autodesk.com -->
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <meta name="product" content="SI">
      <meta name="release" content="2015">
      <meta name="book" content="GeneralUser">
      <meta name="created" content="2014-03-26">
      <meta name="topicid" content="GUID-81CBCCDD-300C-45FE-BC3F-91C684C2414D">
      <meta name="topic-type" content="concept">
      <title>mip_grayball</title>
      <link rel="stylesheet" type="text/css" href="../style/softimage.css"><script type="text/javascript" src="../scripts/ac_common.js"></script><script type="text/javascript" src="../scripts/utils/adsk.redirect.js"></script></head>
   <body height="100%">
      <div class="body_content" id="body-content"><span class="anchor_wrapper"><a name="GUID-81CBCCDD-300C-45FE-BC3F-91C684C2414D"></a></span><div class="head">
            <h1>mip_grayball</h1>
         </div>
         <div class="bodyProcess">
            <p><span class="anchor_wrapper"><a name="GUID-6219613F-4D82-465E-A248-12664D82AE45"></a></span> <em class="strong">Category:</em> mental ray &gt; Texture
            </p>
            <p><span class="anchor_wrapper"><a name="GUID-469460AA-96E0-44A3-B4DA-CC55568C76B2"></a></span> <em class="strong">Shader Family:</em> Environment
            </p>
            <p><span class="anchor_wrapper"><a name="GUID-56428068-81E2-4EAF-9744-851796EA9264"></a></span> <em class="strong">Output:</em> Color
            </p>
            <p><span class="anchor_wrapper"><a name="GUID-EC25353B-1C70-490F-A727-000363A17378"></a></span>This shader does a texture lookup based on the direction of the surface normal. It
               will map the normal vector direction to a point on the gray ball and retrieve its
               color. The parameters are identical to those used by the <span class="char_link"><a href="mentalray_mip_mirrorball.htm">mip_mirrorball</a></span> shader (refer to this shader for all parameter descriptions).
            </p>
            <div class="section"><span class="anchor_wrapper"><a name="WS7941648CBD30B248B121B4AE508381D2-0069"></a></span> 
               <h2><span class="anchor_wrapper"><a name="GUID-174BA6AE-F93E-4C20-81C6-0EA4271AA736"></a></span>Problem/Solution Description
               </h2> 
               <p><span class="anchor_wrapper"><a name="GUID-1E4FB3A0-B903-4B73-BCCD-565F20122B81"></a></span>In the visual effects industry, it is common to shoot a picture of a mirror ball (also
                  known as a <span class="MenuCascade" id="GUID-4F7B9C8C-DEBD-48A1-A445-C6862C4E2B08">light probe</span>) on set, as well as a gray ball for lighting reference.
               </p> 
               <p><span class="anchor_wrapper"><a name="GUID-5CB34736-4327-40A2-8088-6095E131E059"></a></span>Ideally, you shoot these at multiple exposures and use a tool to combine them into
                  a single high dynamic range image and/or unwrap the mirrored/gray ball into a spherical
                  environment map.
               </p> 
               <p><span class="anchor_wrapper"><a name="GUID-44F94931-4AB8-48AC-8574-E1C141E32D62"></a></span>However, it is often difficult to regain the proper orientation of the spherical map
                  such that it matches the camera used to render the CG scene. Furthermore, a single
                  photo of a mirror/gray ball contains poor data for certain angles that you want to
                  avoid seeing in the final render.
               </p> 
               <p><span class="anchor_wrapper"><a name="GUID-F26ABAEE-3D83-437B-8F1B-C7B601158536"></a></span>The mip_grayball and <span class="char_link"><a href="mentalray_mip_mirrorball.htm">mip_mirrorball</a></span> shaders are intended to simplify a particular special case where the mirror/gray
                  ball is already shot from the exact camera angle from which the final image will be
                  rendered. These shaders use the mental ray camera coordinate space and apply the mirror/gray
                  ball in this space, hence the orientation of the reflections will always "stick" to
                  the rendering camera.
               </p> 
            </div>
         </div>
         <div class="footer-block"><a href="../html/ac.cmtdialog.htm" class="comments-anchor" target="_blank"><span class="comments-link">Please send us your comment about this page</span></a></div><br><p class="footer-license-block"><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"><img alt="Creative Commons License" style="border-width: 0;" src="../images/ccLink.png"></a>&nbsp;<em>Except where otherwise noted, this work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>. Please see the <a href="http://autodesk.com/creativecommons" target="_blank">Autodesk Creative Commons FAQ</a> for more information.</em></p><br></div>
   </body>
</html>