<!DOCTYPE html>

<!-- saved from url=(0024)http://docs.autodesk.com -->
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <meta name="product" content="SI">
      <meta name="release" content="2015">
      <meta name="book" content="GeneralUser">
      <meta name="created" content="2014-03-26">
      <meta name="topicid" content="GUID-373D2D45-67E4-4582-B1C9-61B58455580B">
      <meta name="indexterm" content="texture projections: stick">
      <meta name="indexterm" content="texture projections: swim">
      <meta name="indexterm" content="texture projections: reproject">
      <meta name="indexterm" content="sticking: texture projections">
      <meta name="indexterm" content="swimming: texture projections">
      <meta name="indexterm" content="reprojecting: texture projections">
      <meta name="indexterm" content="texture projections: operator stack, dragging and dropping in">
      <meta name="topic-type" content="concept">
      <title>Controlling Whether Textures Stick or Swim</title>
      <link rel="stylesheet" type="text/css" href="../style/softimage.css"><script type="text/javascript" src="../scripts/ac_common.js"></script><script type="text/javascript" src="../scripts/utils/adsk.redirect.js"></script></head>
   <body height="100%">
      <div class="body_content" id="body-content"><span class="anchor_wrapper"><a name="GUID-373D2D45-67E4-4582-B1C9-61B58455580B"></a></span><div class="head">
            <h1>Controlling Whether Textures Stick or Swim</h1>
         </div>
         <div class="bodyProcess">
            <p><span class="anchor_wrapper"><a name="GUID-882B5775-29AF-41A2-93AA-A4A26463497E"></a></span>When you create a texture projection on an object, the projection's texture operator
               is added above the operator at the top of the operator stack's modeling region. This
               means that the texture operator "reads" from above any modeling operators that were
               applied before the texture, which affects how textures using the projection appear
               on the object's surface. 
            </p>
            <p><span class="anchor_wrapper"><a name="GUID-4EB3CCF8-36BA-4F8D-B447-13E9214846C6"></a></span>For example, if you apply a Twist operator to an object and then apply a texture projection,
               textures using the projection will not conform to the deformed object in the expected
               way, and will appear to "slip" over the surface as the Angle parameter of the Twist
               is changed. On the other hand, if you apply the texture projection before the Twist,
               the textures will "stick" to the surface. 
            </p><span class="anchor_wrapper"><a name="FIG_DCD57086345E4E93961131D1FC44A0E7"></a></span><div class="figure-anchor"><img src="../images/GUID-81B0F2F6-5FE6-489C-8978-30E7B9ABC89E-low.png"></div><span class="anchor_wrapper"><a name="TABLE_D30DD407612149C7BE1D2728429D8F74"></a></span><div class="table_Ruled">
               <table cellpadding="0" cellspacing="0" class="ruled">
                  <colgroup>
                     <col align="left">
                     <col align="left">
                  </colgroup>
                  <tr class="ruledOddRow">
                     <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-339A1896-1988-4166-9A1F-690203005876"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-972CE87B-85D9-4D25-9BDC-F226C1F28BB5">A</span> 
                        </p> 
                     </td>
                     <td class="table-body" align="left"> <span class="anchor_wrapper"><a name="GUID-FD757683-4DD9-44F7-B427-C0AB6508D5F5"></a></span><p class="table-body">The two images (B and C) show renderings of this grid with a twist operator applied
                           to it. 
                        </p> 
                     </td>
                  </tr>
                  <tr class="ruledEvenRow">
                     <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-36E3F0B5-4277-4679-B2F1-6B84175ECE03"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-2CF6EB40-DFD9-48E9-B276-A4842A3A7F63">B</span> 
                        </p> 
                     </td>
                     <td class="table-body" align="left"> <span class="anchor_wrapper"><a name="GUID-70BF1041-1D39-436F-9B17-B686B5829702"></a></span><p class="table-body">When the twist is applied before the texture, the texture slips as the grid twists
                           below the projection. 
                        </p> 
                     </td>
                  </tr>
                  <tr class="ruledOddRow">
                     <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-DFE92934-B540-4E80-9235-5B171DA0D09B"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-24F4176D-50A1-4F2F-BADA-DAA9FCE1C6C0">C</span> 
                        </p> 
                     </td>
                     <td class="table-body" align="left"> <span class="anchor_wrapper"><a name="GUID-A48381E3-FA5E-406C-B949-0850840AB9DA"></a></span><p class="table-body">When the projection is applied before the twist, both the grid and the projection
                           are deformed together. 
                        </p> 
                     </td>
                  </tr>
               </table>
            </div>
            <p><span class="anchor_wrapper"><a name="GUID-C11DF4FE-AEBC-4415-815C-93FC1B60E8FA"></a></span>Although texture operators are not visible in the operator stack, you can see where
               any such operator is reading by opening an explorer view, holding the mouse pointer
               over the TextureOp node, and reading the tooltip. 
            </p><span class="anchor_wrapper"><a name="FIG_F823EBC8EDDC46389E86240959139E81"></a></span><div class="figure-anchor"><img src="../images/GUID-EB45507B-9272-4C45-A0BC-D6AAB2C84554-low.png"></div>
            <div class="section"><span class="anchor_wrapper"><a name="WSF3670244173DE845B36001FAA69DB62C-0097"></a></span> 
               <h2><span class="anchor_wrapper"><a name="GUID-20BF05B8-8660-4158-8D30-EE8104C5B7AA"></a></span>Swimming, Sticking, and Reprojecting
               </h2>       
               <p><span class="anchor_wrapper"><a name="GUID-D6DB2E9B-9411-45BF-BC03-05E136CBEAC1"></a></span>The Swim, Stick, and Reproject tools, available from the Render toolbar's <span class="MenuCascade" id="GUID-DD25295A-E63D-4F8F-8DDD-340CE77EC2B5">Modify <img src="../images/ac.menuaro.gif"> Projection</span> menu, allow you to change where a texture projection reads in an object's operator
                  stack. Each tool repositions a projection's texture operator in a specific way. 
               </p> <span class="anchor_wrapper"><a name="UL_FC7F67B9BFDD495D8CB0EA1B717ECB63"></a></span><ul>
                  <li> 
                     <p><span class="anchor_wrapper"><a name="GUID-8C13F05C-7199-4328-BD95-4DD1343C4D9C"></a></span> <span class="MenuCascade" id="GUID-8C1A3317-4644-4C82-9CD1-6D36BD049B8E">Swim</span> checks to see whether the current projection is reading somewhere in the modeling
                        region of the operator stack and, if so, moves it to the very top of the operator
                        stack. 
                     </p> 
                     <p><span class="anchor_wrapper"><a name="GUID-D98FF599-80A2-4DA3-A9CC-CFD5C9D7DCDF"></a></span>As a result, the texture is applied after all deformations, including enveloping and
                        shape animation, have been completed. In other words, the texture will always appear
                        to slip over on the surface when the object is deformed. This is especially useful
                        with camera projections (see <span class="char_link"><a href="tex_basicproc_TypesofTextureProjection.htm#WSF3670244173DE845B36001FAA69DB62C-005C">Camera Projections</a></span>). 
                     </p> 
                  </li>
                  <li> 
                     <p><span class="anchor_wrapper"><a name="GUID-B3F546B8-07DC-445E-8F1A-90B5C3B64689"></a></span> <span class="MenuCascade" id="GUID-4597AB2D-6259-4E77-8AF7-EAA5BE69F267">Stick</span> checks to see whether the projection is reading at the very top of the operator stack
                        (swimming) and, if it is, moves it above the operator that is currently at the top
                        of the modeling region. 
                     </p> 
                     <p><span class="anchor_wrapper"><a name="GUID-A39128BB-4DAB-425A-844C-8065A6C49FDA"></a></span>As a result, the texture is applied after all modeling deformations, but before enveloping.
                        This means that the texture will appear slip over the surface when the object is deformed
                        by operators in the modeling region, but will stick when the object is animated. 
                     </p> 
                     <p><span class="anchor_wrapper"><a name="GUID-06D86D09-08DD-400B-A341-5E33847735A5"></a></span>If the projection is already reading somewhere in the modeling region, Stick has no
                        effect. 
                     </p> 
                  </li>
                  <li> 
                     <p><span class="anchor_wrapper"><a name="GUID-6F7D6683-6EE7-4222-89EA-B85E45075B8A"></a></span> <span class="MenuCascade" id="GUID-7FFA9CA1-0A68-47A7-B229-E82CC9E8FBEA">Reproject</span> checks to see whether the projection is reading anywhere in the modeling region and,
                        if so, moves it above the operator that is currently at the top of the modeling region
                        (above any deformations that were created after the texture projection). 
                     </p> 
                     <p><span class="anchor_wrapper"><a name="GUID-8B681124-F6CE-4829-9D8E-A4093B05195D"></a></span>As a result, the texture is applied after all modeling deformations, but before shapes
                        and envelopes. This means that the texture is applied to the object in its "reference
                        state" (the top of the modeling region) and it will stick when the object is animated.
                        However, the texture will slip if you modify deformations in the modeling region.
                        
                     </p> 
                     <p><span class="anchor_wrapper"><a name="GUID-3B3F54B4-8671-457A-A08A-B47B19A038CF"></a></span>If the projection is already swimming (reading at the very top of the operator stack),
                        Reproject has no effect. 
                     </p> 
                  </li>
               </ul> 
               <p><span class="anchor_wrapper"><a name="GUID-CB1ACB50-7D20-4FDF-8B78-69E352834BC0"></a></span>You can apply these commands to selected objects or to individual texture projections.
                  
               </p> <span class="anchor_wrapper"><a name="UL_F789F8C474D941518634BE1E6F8D8497"></a></span><ul>
                  <li> 
                     <p><span class="anchor_wrapper"><a name="GUID-1FD94320-9C6B-4FA7-BE64-5D13735B854D"></a></span>When applied to an object, Stick, Swim and Reproject affect the texture operator of
                        object's current texture projection. This is the projection used when the object is
                        viewed in a textured display mode (textured, textured decal, and so on). 
                     </p> 
                     <p><span class="anchor_wrapper"><a name="GUID-6E28ABED-DED4-4938-9025-CE51C476C5FB"></a></span>You can change the current projection from the object's Material property editor.
                        See <span class="char_link"><a href="property521.htm">Material Node Property Editor</a></span> [<span class="char_link"><a href="property_ref.htm">Properties Reference</a></span>]. 
                     </p> 
                  </li>
                  <li> 
                     <p><span class="anchor_wrapper"><a name="GUID-FFCC791D-EB7E-4BC0-940A-A5A013DA2BFF"></a></span>When applied to an individual projection, Stick, Swim and Reproject affect that projection's
                        texture operator. You can select an object's texture projections from an explorer
                        view. 
                     </p> 
                     <div class="figure-anchor"><img src="../images/GUID-72EB3359-4E0E-4EBA-9586-523C0096728A-low.png"></div> <span class="anchor_wrapper"><a name="TABLE_A425500BBBB54220B41AA4CF22E35AC5"></a></span><div class="table_Ruled">
                        <table cellpadding="0" cellspacing="0" class="ruled">
                           <colgroup>
                              <col align="left">
                              <col align="left">
                           </colgroup>
                           <tr class="ruledOddRow">
                              <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-F426550A-38C2-429E-AA06-8B9BE234F66B"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-ACAEEA21-1FB2-4196-BC6A-E3C455D1A96E">A</span> 
                                 </p> 
                              </td>
                              <td class="table-body" align="left"> <span class="anchor_wrapper"><a name="GUID-AE103710-A51E-460F-84B6-AA0CFE8A5B97"></a></span><p class="table-body">An object's texture projections are located under its Clusters &gt; Texture_Coordinates_AUTO
                                    node in the explorer. 
                                 </p> 
                              </td>
                           </tr>
                        </table>
                     </div> 
                     <div><span class="anchor_wrapper"><a name="GUID-2E284CFB-3B25-4C90-B0C3-DD3458226147"></a></span><div class="note-note"><span class="label">NOTE:</span>Swim, Stick and Reproject only work on projections that still have a texture operator.
                           They have no effect on frozen projections. 
                        </div>
                     </div> 
                  </li>
               </ul> 
            </div>
            <div class="section"><span class="anchor_wrapper"><a name="WSF3670244173DE845B36001FAA69DB62C-0099"></a></span> 
               <h2><span class="anchor_wrapper"><a name="GUID-212182A4-A29B-49B3-8714-81229F342E31"></a></span>Dragging and Dropping Texture Operators in the Stack
               </h2>  
               <p><span class="anchor_wrapper"><a name="GUID-2A07E65B-CAC1-44DB-BCE1-6D685568A06C"></a></span>You can also drag and drop operators in the explorer view to change where texture
                  operators read in the operator stack. This gives you fine control over where the texture
                  operator "reads". 
               </p> <span class="anchor_wrapper"><a name="FIG_23E84FA43FBC491FAC1E5FA147D8CFFA"></a></span><div class="figure-anchor"><img src="../images/GUID-2610B7E1-CFAB-4B8B-8F42-AD4068AC2007-low.png"></div> <span class="anchor_wrapper"><a name="TABLE_0FABB5B1CE3644B9A983D5EF69070F6B"></a></span><div class="table_Ruled">
                  <table cellpadding="0" cellspacing="0" class="ruled">
                     <colgroup>
                        <col align="left">
                        <col align="left">
                     </colgroup>
                     <tr class="ruledOddRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-9A112192-D240-42F8-8F9E-7B415F87AC41"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-D538980C-BBD6-49E8-AC4F-87E33EA48C06">A to B</span> 
                           </p> 
                        </td>
                        <td class="table-body" align="left"> <span class="anchor_wrapper"><a name="GUID-9A5B04F5-29C3-4206-97EB-D77DDFFA0ED8"></a></span><p class="table-body">In this example, dragging the TwistOp onto the TextureOp causes the texture operator
                              to read below the twist, so the texture sticks when the object is deformed. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-5036DFC7-EF01-4BC5-95CE-60F6C343C65F"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-7042D96D-F6D4-488F-92F7-2F1ADF57FE97">B to A</span> 
                           </p> 
                        </td>
                        <td class="table-body" align="left"> <span class="anchor_wrapper"><a name="GUID-3FC97D04-9F51-4F03-AA44-C7A8BEC7D849"></a></span><p class="table-body">Conversely, dragging the TextureOp onto the TwistOp causes the texture operator to
                              read above the twist, so the texture slips when the object is deformed. You can freeze
                              the twist operator without freezing the projection. 
                           </p> 
                        </td>
                     </tr>
                  </table>
               </div> 
               <p><span class="anchor_wrapper"><a name="GUID-8C872A60-72AD-46CF-BADA-1B3AED712B79"></a></span>For more information about the operator stack and the order of operations, see <span class="char_link"><a href="basic_mod_OperatorStack.htm">Operator Stack</a></span> [<span class="char_link"><a href="modef_cover.htm">Data Exchange</a></span>]. 
               </p> 
            </div>
         </div>
         <div class="footer-block"><a href="../html/ac.cmtdialog.htm" class="comments-anchor" target="_blank"><span class="comments-link">Please send us your comment about this page</span></a></div><br><p class="footer-license-block"><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"><img alt="Creative Commons License" style="border-width: 0;" src="../images/ccLink.png"></a>&nbsp;<em>Except where otherwise noted, this work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>. Please see the <a href="http://autodesk.com/creativecommons" target="_blank">Autodesk Creative Commons FAQ</a> for more information.</em></p><br></div>
   </body>
</html>