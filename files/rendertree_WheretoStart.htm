<!DOCTYPE html>

<!-- saved from url=(0024)http://docs.autodesk.com -->
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <meta name="product" content="SI">
      <meta name="release" content="2015">
      <meta name="book" content="GeneralUser">
      <meta name="created" content="2014-03-26">
      <meta name="topicid" content="GUID-E889E327-BD8B-4BA3-BCAC-AF04C348B8A6">
      <meta name="indexterm" content="material node: about">
      <meta name="indexterm" content="material node: inputs">
      <meta name="indexterm" content="camera node: about">
      <meta name="indexterm" content="camera node: inputs">
      <meta name="indexterm" content="light node: about">
      <meta name="indexterm" content="light node: inputs">
      <meta name="indexterm" content="render tree: node colors">
      <meta name="indexterm" content="shaders: inputs and outputs">
      <meta name="indexterm" content="inputs: to shaders in render tree">
      <meta name="indexterm" content="outputs from shaders in render tree">
      <meta name="topic-type" content="concept">
      <title>About Render Tree Nodes</title>
      <link rel="stylesheet" type="text/css" href="../style/softimage.css"><script type="text/javascript" src="../scripts/ac_common.js"></script><script type="text/javascript" src="../scripts/utils/adsk.redirect.js"></script></head>
   <body height="100%">
      <div class="body_content" id="body-content"><span class="anchor_wrapper"><a name="GUID-E889E327-BD8B-4BA3-BCAC-AF04C348B8A6"></a></span><div class="head">
            <h1>About Render Tree Nodes</h1>
         </div>
         <div class="bodyProcess">
            <p><span class="anchor_wrapper"><a name="GUID-75D1F962-BC89-488B-9298-4C68DEC989F3"></a></span>The first time you start working with the render tree, it may be a little daunting.
               There are a lot of nodes and thousands of possible connections with more shaders than
               you know what to do with! 
            </p>
            <p><span class="anchor_wrapper"><a name="GUID-AC7C4698-B945-4D6E-B88E-D7901D901DBD"></a></span>The trick to keeping focused is knowing what shader goes where and what it does. A
               good place to start is to know what can be plugged into the Material node, the Camera
               node, and the Light node. 
            </p>
            <div class="section"><span class="anchor_wrapper"><a name="WS0BA946C0C7F07C489426C340C08C4904-0010"></a></span> 
               <h2><span class="anchor_wrapper"><a name="GUID-FD2B6769-1628-4D2B-AB3F-78FE03847189"></a></span>The Material Node
               </h2>   
               <p><span class="anchor_wrapper"><a name="GUID-8C585BD3-3265-4A3D-9669-3CCEDD3B5984"></a></span>The Material node acts like a container for all of the possible shaders that can be
                  applied to an object. Every object has a material node: without it, an object wouldn't
                  render. Shaders can alter an object by invoking one or several of the shader input
                  types. 
               </p> <span class="anchor_wrapper"><a name="FIG_BD25BF1D52DD4B15A4CC76707243D26C"></a></span><div class="figure-anchor"><img src="../images/GUID-83A342A8-FD44-45C1-9A4A-8F22B42010C0-low.png"></div> <span class="anchor_wrapper"><a name="TABLE_5B8AAB4EF09B498581E0A51CAEE284C8"></a></span><div class="table_Ruled">
                  <table cellpadding="0" cellspacing="0" class="ruled">
                     <colgroup>
                        <col>
                        <col>
                     </colgroup>
                     <tr class="ruledHeading">
                        <th class="table-heading"> <span class="anchor_wrapper"><a name="GUID-E3E70109-D061-4A97-80A9-AAB706240E06"></a></span><p class="table-heading"> <span class="MenuCascade" id="GUID-67DF9AE2-437D-4606-884E-A18137EE2275">Input Type</span> 
                           </p> 
                        </th>
                        <th class="table-heading"> <span class="anchor_wrapper"><a name="GUID-CBB39032-3A07-49EF-BECD-776851FFBA7F"></a></span><p class="table-heading"> <span class="MenuCascade" id="GUID-79307CC1-5E16-4470-B681-2E68401FE24B">Function</span> 
                           </p> 
                        </th>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-D438A9EF-E300-4862-8210-FF2B10405956"></a></span><p class="table-body">Surface </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-D581BA66-5D92-4973-AD5E-E0621B8024B2"></a></span><p class="table-body">Determines the basic color of an object as well as the casting of reflected, refracted,
                              and transparency rays. These usually use texture shaders to further define a material.
                              See <span class="char_link"><a href="mat_surface_shaders.htm">Working with Surface Shaders</a></span>. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-ED232EE7-5233-4673-ADC7-A7CC5F4C569D"></a></span><p class="table-body">Volume </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-E5B5D306-91D0-4319-8463-28681BE9144F"></a></span><p class="table-body">Modifies rays as they pass through an object or the scene as a whole. It can simulate
                              effects such as clouds, smoke, and fire. See <span class="char_link"><a href="shaderef_volume.htm">Volume</a></span> [<span class="char_link"><a href="shaderef_cover.htm">Shader Reference</a></span>]. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-30FD2FF1-0967-4655-A9BB-64CCB1AE3282"></a></span><p class="table-body">Environment </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-67CE3CC8-A05F-4E76-8812-ACBD4AD6CD6C"></a></span><p class="table-body">Used instead of surface shaders when an eye ray leaves the scene entirely. It defines
                              what is seen in the background or infinity. See <span class="char_link"><a href="shaderef_environment.htm">Environment</a></span> [<span class="char_link"><a href="shaderef_cover.htm">Shader Reference</a></span>]. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-665D1AB5-CC90-4ED2-B64F-1674F54C7A65"></a></span><p class="table-body">Contour </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-47E99479-463B-47A6-94C0-16558AFF2D8B"></a></span><p class="table-body">Used to add contour effects to objects' edges, such as a cartoon effect shader. </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-0C1D7B9C-CAA4-4E31-BF4F-B27FFFF98ABF"></a></span><p class="table-body">Displacement </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-F23072A3-5D83-4BF3-8C97-2F99AE8B245E"></a></span><p class="table-body">Alters an object's surface by displacing its points; the resulting bumps are visibly
                              raised and can cast shadows. Displacement is only visible in a rendering. See <span class="char_link"><a href="tex_maps_CreatingaDisplacementMap.htm">Displacement Maps</a></span> [<span class="char_link"><a href="tex_cover.htm">Textures and Maps</a></span>]. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-20A0209D-1B11-4694-9CB5-F7F8A26D7928"></a></span><p class="table-body">Shadow </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-1240DEAB-8BD4-4998-BB27-41568534A711"></a></span><p class="table-body">Determines how the light coming from a light source is altered when it is obstructed
                              by an object. It is used to define the way an object's shadow is cast, such as its
                              opacity and color. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-08FE8A24-01C7-48C0-9C9C-E6ABC0537DFC"></a></span><p class="table-body">Photon </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-32C00206-B977-44D0-AB90-5E9D69C9C8F5"></a></span><p class="table-body">Used for global illumination and caustic effects. Without this connection, an object
                              could not receive or transmit photons. See <span class="char_link"><a href="GIcaustics_ControllingthePhotonEffect.htm">Controlling the Photon Effect</a></span> [<span class="char_link"><a href="gi_lights_cover.htm">Indirect Illumination</a></span>]. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-04DEC745-B186-4E30-B1C8-42AA722E24E0"></a></span><p class="table-body">Photon Volume </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-19D0FD83-56C8-4D49-8A1B-96919C7DBDE9"></a></span><p class="table-body">Used to define a volume for a photon effect. </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-F7C1B168-C37F-49AE-AFA0-1B53D3BA872C"></a></span><p class="table-body">Bump Map </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-5BF382D9-3D3C-47FD-B813-03D14D179CF6"></a></span><p class="table-body">Determines how and where an object will display a bump map on its surface. See <span class="char_link"><a href="tex_maps_CreatingBumpMaps.htm#WS9825820158CC6F408FB52FB16A0CCEBF-000A">Creating a Bump Map in the Render Tree</a></span> [<span class="char_link"><a href="tex_cover.htm">Textures and Maps</a></span>]. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-193D3964-90F4-4A3D-92ED-5F4067C613CF"></a></span><p class="table-body">Lightmap </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-FD6E08EA-188D-4E24-909C-E2EF5CF4182D"></a></span><p class="table-body">Accepts connections from Lightmap shaders, which are used to sample object surfaces.
                              
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-C9D6346C-FB78-4A55-A047-7212B2C709E0"></a></span><p class="table-body">RealTime </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-59FF6453-5AB4-473F-A3BA-37876D1DA4CC"></a></span><p class="table-body">Accepts connections from realtime shaders. All other realtime rendered object attributes
                              are set and adjusted in the realtime shader tree that connects to this port. See <span class="char_link"><a href="rt_cover.htm">Realtime Shaders</a></span>. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-07044418-ADCB-4EB2-8C9B-4BBAC7D3338E"></a></span><p class="table-body">Material </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-A73627AD-E290-4019-AE00-69C7C77BFF38"></a></span><p class="table-body">Accepts connections from a material phenomenon. Material phenomena are predefined
                              combinations of shaders packaged as single nodes. For example, the Fast Subsurface
                              Scattering shader is a material phenomenon. 
                           </p> <span class="anchor_wrapper"><a name="GUID-91933662-75D1-4384-A8BC-C89F804BF981"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-67C26BA5-E5B5-4724-9717-26CE5B777967">Note:</span> Connecting a phenomenon to this input disables connections to all other material
                              node inputs. 
                           </p> 
                        </td>
                     </tr>
                  </table>
               </div> 
            </div>
            <div class="section"><span class="anchor_wrapper"><a name="WS0BA946C0C7F07C489426C340C08C4904-0012"></a></span> 
               <h2><span class="anchor_wrapper"><a name="GUID-A3C376A0-D7CD-4D85-B7DA-62D48CCD4AC5"></a></span>The Camera Node
               </h2>   
               <p><span class="anchor_wrapper"><a name="GUID-62F7BA9D-B9F1-4C09-AF3A-79C55DF6ED74"></a></span>The Camera node acts like a container for all of the possible shaders that can be
                  applied to a camera object. Every camera has a camera node to which you can connect
                  a variety of lens shaders to its Lens Shaders port group. 
               </p> <span class="anchor_wrapper"><a name="FIG_C8BF4E2E353748B6849A802F75157DD9"></a></span><div class="figure-anchor"><img src="../images/GUID-D421250A-51B9-4294-9201-328C34A9309E-low.png"></div> <span class="anchor_wrapper"><a name="TABLE_E3B43CDE1826476C93121380935E009E"></a></span><div class="table_Ruled">
                  <table cellpadding="0" cellspacing="0" class="ruled">
                     <colgroup>
                        <col>
                        <col>
                     </colgroup>
                     <tr class="ruledHeading">
                        <th class="table-heading"> <span class="anchor_wrapper"><a name="GUID-A009E086-6B71-41B9-81BC-AD695701C24F"></a></span><p class="table-heading"> <span class="MenuCascade" id="GUID-64E3FB12-7481-4F67-A913-E4CBA5BB738A">Input Type</span> 
                           </p> 
                        </th>
                        <th class="table-heading"> <span class="anchor_wrapper"><a name="GUID-2DF47298-3B1F-4C11-85D4-E8A0FAF3745A"></a></span><p class="table-heading"> <span class="MenuCascade" id="GUID-5E3BC80F-7624-49ED-B73D-8B2F70877035">Function</span> 
                           </p> 
                        </th>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-386941C8-EF7C-4FE9-A6FA-1B3124E741FB"></a></span><p class="table-body">Lens Shader </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-E51CD149-A979-41F5-A2B5-BC2CFB60DC7F"></a></span><p class="table-body">Accepts connections from lens shaders. Lens shaders are used when a primary ray is
                              cast by the camera. They may modify the ray's origin and direction to implement cameras
                              other than the standard pinhole camera and they may modify the result of the primary
                              ray to implement effects such as lens flares or a cartoon effect. See <span class="char_link"><a href="cameras_AddingLensShaderstotheCamera.htm">Applying Lens Shaders to Cameras</a></span>. 
                           </p> 
                        </td>
                     </tr>
                  </table>
               </div> 
            </div>
            <div class="section"><span class="anchor_wrapper"><a name="WS0BA946C0C7F07C489426C340C08C4904-0014"></a></span> 
               <h2><span class="anchor_wrapper"><a name="GUID-EBBA6EDE-837D-453E-B33D-92B2E1C54147"></a></span>The Light Node
               </h2>   
               <p><span class="anchor_wrapper"><a name="GUID-E7AE2B66-50A1-4E27-9DF9-A8E13D4197C9"></a></span>The Light node acts like a container for all of the possible shaders that can be applied
                  to a light object. Every light has a light node to which you can connect a variety
                  of light shaders to its input ports. 
               </p> <span class="anchor_wrapper"><a name="FIG_F4D5E61B12B54C1CAA69E7449ECE9D9B"></a></span><div class="figure-anchor"><img src="../images/GUID-1A64A400-B269-491E-8F15-D69EE1151CC9-low.png"></div> <span class="anchor_wrapper"><a name="TABLE_BCBAE21D77C04FB29DDB309E236395C2"></a></span><div class="table_Ruled">
                  <table cellpadding="0" cellspacing="0" class="ruled">
                     <colgroup>
                        <col>
                        <col>
                     </colgroup>
                     <tr class="ruledHeading">
                        <th class="table-heading"> <span class="anchor_wrapper"><a name="GUID-4372CE60-128A-4CAB-B866-8822DFE7D6E4"></a></span><p class="table-heading"> <span class="MenuCascade" id="GUID-D6539AF7-1D56-4285-A7BA-7F88C2ED8E44">Input Type</span> 
                           </p> 
                        </th>
                        <th class="table-heading"> <span class="anchor_wrapper"><a name="GUID-B4B5B7E8-28E2-4221-AB98-F149E3538AD1"></a></span><p class="table-heading"> <span class="MenuCascade" id="GUID-2B29D19C-C337-48FE-9EE6-A990F1551384">Function</span> 
                           </p> 
                        </th>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-EFF50584-E1FC-4376-83A6-B3028450C9D7"></a></span><p class="table-body">Light Shader </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-EEA82EAE-5F44-45C6-BCF9-472FBF79FA65"></a></span><p class="table-body">Accepts connections from light shaders. Light shaders implement the characteristics
                              of a light source. For example, a light shader uses the illumination direction to
                              attenuate the amount of light emitted. A light shader is used whenever a surface shader
                              uses a built-in function to evaluate a light. 
                           </p> <span class="anchor_wrapper"><a name="GUID-3C9F7DD5-F872-4CFE-85DD-C64A5B27A6C7"></a></span><p class="table-body">If shadows are used, light shaders normally cast shadow rays to detect obscuring objects
                              between the light source and the illuminated point. See <span class="char_link"><a href="shaderef_light.htm">Light</a></span> [<span class="char_link"><a href="shaderef_cover.htm">Shader Reference</a></span>]. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-52E365C6-C5D7-445C-9FB0-5540E83A0233"></a></span><p class="table-body">Light Photon Emitter Shader </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-56441206-AEA6-43C5-8342-E4E36F9CDA78"></a></span><p class="table-body">Accepts connections from photon-emitting light shaders. Instead of using an object's
                              surface shader to calculate photon energy, you can make the light shader perform the
                              necessary calculations by connecting to this port and using the light color as energy.
                              See <span class="char_link"><a href="GIcaustics_UsingtheLightShadertoCreatePhotons.htm">Using the Light Shader to Create Photons</a></span>. 
                           </p> 
                        </td>
                     </tr>
                  </table>
               </div> 
            </div>
            <div class="section"><span class="anchor_wrapper"><a name="WS0BA946C0C7F07C489426C340C08C4904-0016"></a></span> 
               <h2><span class="anchor_wrapper"><a name="GUID-03743DB9-D629-4B9A-8500-2D4C00E8857F"></a></span>Shader Families and Node Colors
               </h2>  
               <p><span class="anchor_wrapper"><a name="GUID-E7D2319A-6B9C-45CD-9FC1-39F5D639A7AB"></a></span>Every node that appears in the render tree is color coded to identify it as a member
                  of a particular <span class="MenuCascade" id="GUID-D17A70E4-3A0C-4B01-A86D-7CD0623B32FD">shader family</span>. A shader family indicates how a shader can be used in a render tree. Different shader
                  families enforce different connection restrictions. For example, if a shader is from
                  the light family, it can only be connected to a light node in the render tree. 
               </p> 
               <p><span class="anchor_wrapper"><a name="GUID-87E7C5B5-31A6-4437-9516-67294A388E38"></a></span>As a render tree structure grows in size and complexity, color coding is very useful
                  to locate a node's function at a glance. Here is the node color code: 
               </p> <span class="anchor_wrapper"><a name="TABLE_6C85368CBE214882BC922818921996CF"></a></span><div class="table_NotRuled">
                  <table cellpadding="0" cellspacing="0" class="not-ruled">
                     <colgroup>
                        <col>
                        <col>
                     </colgroup>
                     <tr class="not-ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-22B4F934-B32C-462B-92BB-ECD1CEA3769C-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-5356C6B0-B221-4BFF-BCF9-A3DF027468AF"></a></span><p class="table-body">Material phenomenon </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-532D99DF-58E8-4317-AF78-A869605B8891-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-2E6ABC6D-C60B-48B3-AA7A-2E6F81C2CF13"></a></span><p class="table-body">Surface Material and Shadow Material shaders </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-13B71564-6544-40DD-BCE0-1FB31C57125E-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-29C66777-6210-4A92-BA2D-AE9A7A0053FE"></a></span><p class="table-body">Texture shader </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-0763FC81-D214-4096-98CA-15B95736A9D1-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-52938D08-AC78-4485-A8B3-44C6541DAB22"></a></span><p class="table-body">Lightmap shader </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-B0C095F2-4670-4958-A368-D57861FDB1DE-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-7C65E802-6D50-4559-B523-867A71DE1C8A"></a></span><p class="table-body">Environment shader </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-BCC7F273-9D93-409A-8750-347786F9AE8D-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-D7EAF250-BBCC-4B2D-9E8A-43A976C88916"></a></span><p class="table-body">Realtime shader </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-3F81E838-6EE8-49DC-ACE8-340A8CE9E997-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-51C4D6B6-D523-4147-BE5A-6653F8499106"></a></span><p class="table-body">Volume Shader </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-E4C6406F-6976-4798-AA82-FB9096181B65-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-4544CA62-201B-4958-8BC9-B7F9B8B76089"></a></span><p class="table-body">Output shader </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-889FAB09-EF9C-4922-95B5-5C041E49F164-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-C632599F-0E0E-4CB5-932A-E6F9C2B2714D"></a></span><p class="table-body">Lens shader </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-32EA237E-E394-4C3E-AF1C-CAD64ED35010-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-F45E6636-9A7B-4DC1-91E5-2C10ED81FCB4"></a></span><p class="table-body">Light and Photon Light shaders </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-B96E6AF4-28B7-44C3-9FB4-C701B0C810B4-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-8FE1D901-759B-4E2A-84AC-C7832F67CF74"></a></span><p class="table-body">Photon Material and Photon Volume shaders </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-B84B6B69-A4E1-4AA0-B692-49404B495136-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-8DF05AC5-CB4C-4333-9EF3-E79321599063"></a></span><p class="table-body">Geometry shader </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-BA581169-130A-4B9E-B725-50072D31A64A-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-32568DC8-4896-41D4-AB17-321044F31D3F"></a></span><p class="table-body">Contour shader </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-5422793B-6F7E-4986-90F8-075261042E0C-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-C176EFC1-BAF9-4721-8F3B-57E10CD2F14B"></a></span><p class="table-body">Image Clip shader. </p> <span class="anchor_wrapper"><a name="GUID-DF87D24D-A01E-4BB2-B4E4-43CB909D9C4E"></a></span><p class="table-body">The standard image clip shader has the same node color as a writable image clip shader,
                              but a different output port color to distinguish its particular function. For more
                              information, see <span class="char_link"><a href="property3509.htm">Image Clip Property Editor</a></span> and <span class="char_link"><a href="property3503.htm">Image Source Property Editor</a></span>. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="not-ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-3E4D584E-A94A-406C-85D2-6ECE6513F579-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-FE97EEC3-E268-47FF-B60B-ED75C7F27598"></a></span><p class="table-body">Writable Image Clip shader. </p> <span class="anchor_wrapper"><a name="GUID-F3EABC6C-0699-487A-ADAD-A7AE769CB3AA"></a></span><p class="table-body">The writable image clip shader has the same node color as a standard image clip shader,
                              but a different output port color to distinguish its particular function. For more
                              information, see the <span class="char_link"><a href="property8544.htm">Writable Image Source Property Editor</a></span>. 
                           </p> 
                        </td>
                     </tr>
                  </table>
               </div> 
               <div class="section"><span class="anchor_wrapper"><a name="WS0BA946C0C7F07C489426C340C08C4904-0026"></a></span> 
                  <h3><span class="anchor_wrapper"><a name="GUID-5409D4F4-6520-448B-A0A3-3DEF3887236D"></a></span>Other Node Colors
                  </h3> 
                  <p><span class="anchor_wrapper"><a name="GUID-ADCCDCF1-020D-40F9-9840-0C4CBDC391B0"></a></span>When a realtime effects shader fails to compile, it is displayed in the render tree
                     as a bright red node to indicate that it's in an error state. 
                  </p> <span class="anchor_wrapper"><a name="FIG_6D40154DBB8345D0A0741C61DE7368DC"></a></span><div class="figure-anchor"><img src="../images/GUID-983A0386-DA0D-452C-86F1-152A010F215C-low.png"></div> 
                  <p><span class="anchor_wrapper"><a name="GUID-41EFB720-D9C9-4401-9C95-9DC994536B54"></a></span>A shader compound contains multiple shaders grouped together into one node. The shader
                     compound's node color has no real significance except to make it easier for you to
                     identify it in a render tree. You can modify the shader compound's node color to suit
                     your needs. However, the shader compound is distinguishable from a basic shader node
                     because of its double-outline. 
                  </p> <span class="anchor_wrapper"><a name="FIG_7E42F695DFA14D2FA6C8015EE792C4D9"></a></span><div class="figure-anchor"><img src="../images/GUID-B345CC30-89E7-4969-876D-AE5E393F0E67-low.png"></div> 
               </div> 
            </div>
            <div class="section"><span class="anchor_wrapper"><a name="WS0BA946C0C7F07C489426C340C08C4904-0029"></a></span> 
               <h2><span class="anchor_wrapper"><a name="GUID-11D075C0-B1BC-4623-BDFD-7EF089EDC148"></a></span>Shader Input and Output Ports
               </h2>    
               <p><span class="anchor_wrapper"><a name="GUID-A1E49FD6-5A99-461C-B8F4-2DA75834870D"></a></span>Every port (parameter) of every shader is color coded. A node's output ports are indicated
                  by connection points (colored dots) on the right side of the node, and its input ports
                  are indicated by connection points on the left side of the node. The color identifies
                  what type of data the port will accept or output. 
               </p> 
               <p><span class="anchor_wrapper"><a name="GUID-46043FE6-5C71-4890-A940-2B2DD6E4D459"></a></span>The following table describes the type of data each input or output port uses: 
               </p> <span class="anchor_wrapper"><a name="TABLE_B597AFD3F2F3489B8FD680260AAD91DA"></a></span><div class="table_Ruled">
                  <table cellpadding="0" cellspacing="0" class="ruled">
                     <colgroup>
                        <col>
                        <col>
                        <col>
                     </colgroup>
                     <tr class="ruledHeading">
                        <th class="table-heading"> <span class="anchor_wrapper"><a name="GUID-1FDD35F9-9927-44E8-89E9-989334EBAC24"></a></span><p class="table-heading"> <span class="MenuCascade" id="GUID-6B54D371-7220-4D81-B2D1-409C0383F42C">Color</span> 
                           </p> 
                        </th>
                        <th class="table-heading"> <span class="anchor_wrapper"><a name="GUID-E01B8D66-806F-46C6-A4EF-E42332A2AD4E"></a></span><p class="table-heading"> <span class="MenuCascade" id="GUID-526F86ED-090B-4F27-A7B7-339E722E2803">Input/Output</span> 
                           </p> 
                        </th>
                        <th class="table-heading"> <span class="anchor_wrapper"><a name="GUID-0CE15685-B69E-4E0A-9F6C-4A6BBFB46D0C"></a></span><p class="table-heading"> <span class="MenuCascade" id="GUID-F0467ED8-B566-4A2A-A4B4-7FD63B0E2803">Result</span> 
                           </p> 
                        </th>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-D076048F-6F71-42EA-A886-ABCDC8D219E0-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-C4C32D45-D2C5-4B2F-900F-BC318EA9D312"></a></span><p class="table-body">Color </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-99611496-B41D-45B2-B26E-A0441F5BE37E"></a></span><p class="table-body">A color value expressed as a quadruple of scalars representing the RGBA channels.
                              
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-39D4D75C-D87D-4EEC-A752-B50CA9A26392-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-D9405997-0063-486C-BB94-35C73BB5FCBB"></a></span><p class="table-body">Scalar </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-C80E20E3-710F-4A60-BF0A-C7455A3AA23F"></a></span><p class="table-body">A real number represented as a decimal value, for example, 3.14. </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-B23B089C-23B6-4512-8E43-66957BDBF347-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-1E61EAA0-ED2F-46C0-8C96-C0028B8A8363"></a></span><p class="table-body">2D Vector </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-4E8A6C24-9B3A-403B-B47B-C8FA52C4F406"></a></span><p class="table-body">A two-dimensional vector [x, y] whose entries are scalars, for example, a UV coordinate.
                              
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-B23B089C-23B6-4512-8E43-66957BDBF347-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-0D37A67D-E57D-4BAC-B3AE-54C5F9893498"></a></span><p class="table-body">3D Vector </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-95EEA666-76DB-47C0-B681-5D68F3E122B8"></a></span><p class="table-body">A three-dimensional vector [x, y, z] whose entries are scalars, for example, a surface
                              normal. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-C48D8220-89AF-4493-BFB2-7507B57AE988-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-6B7FA23C-BD56-4BA5-B856-B995FF08350C"></a></span><p class="table-body">4D Vector </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-8D52295D-4B8B-48A6-9907-4722C6F9CE36"></a></span><p class="table-body">A four-dimensional vector [w, x, y, z] whose entries are scalars. </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-A067C4C8-B132-4572-94B9-92D527FBA361-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-3A3DCE13-530E-4978-BB77-DD7AF51C2636"></a></span><p class="table-body">Boolean </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-B0AB7CB8-FF4F-4B8B-B025-7C9DDDBE62A8"></a></span><p class="table-body">A Boolean value: True or False. </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-16DE36A5-5676-4FC6-9853-259CCD0830C7-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-54890DEA-537B-4292-B9FD-412FB898C460"></a></span><p class="table-body">Integer </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-4FD97878-FE0E-4F33-9C22-7BAD1B72EA23"></a></span><p class="table-body">A positive or negative number without decimal fractions, for example, 7, –2, or 0.
                              
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-403668D2-6B5C-4F49-990D-F95789D8E7FD-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-96E3795F-FD82-4251-B707-E7A307DF088D"></a></span><p class="table-body">Image </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-90941404-77CF-4C99-AAC3-999870C04E3E"></a></span><p class="table-body">Accepts and outputs texture/image clip data. </p> <span class="anchor_wrapper"><a name="GUID-DE4A6A2E-20E1-4630-B0B8-B5DDA9E17A95"></a></span><p class="table-body">For more information, see <span class="char_link"><a href="property3509.htm">Image Clip Property Editor</a></span> and <span class="char_link"><a href="property3503.htm">Image Source Property Editor</a></span>. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-63CFA9B4-B8A6-4643-8CEB-FE4A26E143A9-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-00072640-F60B-4979-B2F7-64545133EF25"></a></span><p class="table-body">Image </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-7184DCFF-2315-42F6-9423-41121462B03A"></a></span><p class="table-body">Accepts and outputs writable texture/image clip data. For example, this data type
                              is accepted by the lightmap and depthmap input ports on a lightmap shader node. A
                              writable image output port can also can be connected to a standard image input port.
                              
                           </p> <span class="anchor_wrapper"><a name="GUID-0E111AE8-AB05-429E-8D10-4051E6F615FC"></a></span><p class="table-body">For more information, see the <span class="char_link"><a href="property8544.htm">Writable Image Source Property Editor</a></span>. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-16DDF338-728A-4A82-81DA-FE0AB85F0F36-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-E40342AB-FE90-4FA1-BF64-1C83C9322553"></a></span><p class="table-body">RealTime </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-869A67DF-0A51-4880-A5D4-D19AE83AEFCC"></a></span><p class="table-body">Accepts and outputs realtime shader data. </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-D168ABFA-FBF8-4061-B5FD-E80E6D72082F-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-A52C5692-82BF-46F2-B669-054F60E8EF5F"></a></span><p class="table-body">Lightmap </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-ECDD8AC4-257B-4DF6-B0CD-6D839C0F94B3"></a></span><p class="table-body">Accepts and outputs lightmap shader data. For example, this data type is ouput by
                              the ouput port on a lightmap shader node and accepted by the lightmap input port on
                              the Material node. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-4639AC07-0957-45DC-9668-F0688A7D87E1-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-FD40251A-08CA-42D0-AFBF-E32783D8478D"></a></span><p class="table-body">Material Phenomenon </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-24C21302-0F38-45D4-86C3-1DC2DB622CE6"></a></span><p class="table-body">Accepts and outputs the result of a material phenomenon shader. </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-DDAC6591-4584-4728-94D0-F980A1CC7CCD-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-D204BB28-A2A0-4C9C-8F51-3EDF6ECA6DEE"></a></span><p class="table-body">3x3 Matrix </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-E3574409-0606-4F5F-9DB2-2ECBDD65F461"></a></span><p class="table-body">A 3-by-3 matrix whose entries are real numbers. 3x3 matrices are often used to represent
                              rotation and scaling. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-793EB798-46FE-4673-B29E-4789DCEE3338-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-D20106D5-9955-4C15-AB0A-0AD058D4BCD7"></a></span><p class="table-body">4x4 Matrix </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-8212C5DE-6B83-498B-9A3D-9B2D117187F3"></a></span><p class="table-body">A 4-by-4 matrix whose entries are real numbers. 4x4 matrices are often used to represent
                              transformations (scaling, rotation, and translation). 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-DEA3FEBD-E465-4E0E-A8CB-A5A626E05C4C-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-219276E9-CD78-4C4B-B8CD-743014F992D7"></a></span><p class="table-body">Quaternion </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-A3F7C582-BE03-47E3-BC33-31EA760A2AB5"></a></span><p class="table-body">A quaternion [x, y, z, w]. Quaternions are usually used to represent an orientation.
                              
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-0E48BA90-6241-425E-A01F-D146842368C3-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-C816773D-BD62-497C-B1B3-AFC7350F08EB"></a></span><p class="table-body">Reference </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-5B6B6260-C0CA-498D-B102-6CD8D44C6438"></a></span><p class="table-body">A reference to an object, parameter, or attribute in the scene, expressed as a character
                              string. 
                           </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-86E3F412-E29F-4146-9F74-99DD70DA066C-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-2730C828-7D8E-49A7-8B21-D6988AF36469"></a></span><p class="table-body">String </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-D68022CD-92D7-4EBD-930D-E5F2F313DC9C"></a></span><p class="table-body">A string of characters. Strings can be used for storing file paths, for example. </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body">&nbsp; <img src="../images/GUID-D1EEA893-B7E1-4BCB-B782-64D996124A6B-low.png"> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-CE88BFCD-2F33-48C8-A051-36E7C10B5587"></a></span><p class="table-body">Custom </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-801638EF-63AD-4866-A3AF-1E128F3E1A44"></a></span><p class="table-body">Accepts a variety of data types. </p> 
                        </td>
                     </tr>
                  </table>
               </div> 
            </div>
            <div class="section"><span class="anchor_wrapper"><a name="WS0BA946C0C7F07C489426C340C08C4904-003C"></a></span> 
               <h2><span class="anchor_wrapper"><a name="GUID-0AF5271A-52ED-44C1-9DF8-E3035E50BAD3"></a></span>Ports for Parameters: The Ins and Outs
               </h2> 
               <p><span class="anchor_wrapper"><a name="GUID-380561A8-4F4E-4675-9E4F-5855D7ADF8C4"></a></span>In the render tree, every shader node lists its parameters as ports. You connect shaders
                  by plugging one node's output port into another node's input port, each of which represents
                  a parameter. 
               </p> <span class="anchor_wrapper"><a name="FIG_549BBADD5D3E467F9791CB5176040F50"></a></span><div class="figure-anchor"><img src="../images/GUID-6D8CB7EE-A21A-455C-A47B-9E3D1B3A35F7-low.png"></div> <span class="anchor_wrapper"><a name="TABLE_0A8958B92F054ACD982E955191A8644D"></a></span><div class="table_Ruled">
                  <table cellpadding="0" cellspacing="0" class="ruled">
                     <colgroup>
                        <col>
                        <col>
                     </colgroup>
                     <tr class="ruledOddRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-8393DAEC-D730-4CAC-92B3-49DECEE44464"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-DFC4A3EF-BA1A-455A-80B5-F7519E26BD27">A</span> 
                           </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-62D8A1E1-4F75-48F1-862A-9BC3B93F4AE4"></a></span><p class="table-body">Shader input ports. </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-2DF79B43-50FA-4B8C-890F-607181F2717C"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-AE2D4869-3B52-410E-ACD2-06C078018801">B</span> 
                           </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-12D07C5C-1AF5-451D-91B1-4439C681C9D2"></a></span><p class="table-body">Parameters that control related shader attributes are grouped into port groups. </p> 
                        </td>
                     </tr>
                     <tr class="ruledOddRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-66E316FC-2A0C-4674-A4AA-61434C8CBD3D"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-26F8F99A-6E23-4365-889C-84F3AD651145">C</span> 
                           </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-26F6DB4D-1E82-4B37-AB36-8CBF890432CB"></a></span><p class="table-body">Texture layers are also grouped. </p> 
                        </td>
                     </tr>
                     <tr class="ruledEvenRow">
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-46E2B329-AA03-46C3-BDCF-1E713749A93F"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-C6E7C0A2-1B49-4F95-8E68-3841AE3FB78C">D</span> 
                           </p> 
                        </td>
                        <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-E0DF21B7-8B6B-44E6-B777-33FF748F66F7"></a></span><p class="table-body">Output port. </p> 
                        </td>
                     </tr>
                  </table>
               </div> 
               <p><span class="anchor_wrapper"><a name="GUID-F5272C70-3063-4E30-B011-3252C9BB8796"></a></span>As long as one node's output type matches the input type of the destination port,
                  you can connect the two nodes. What happens depends on the value of the outputting
                  node, the setting of the inputting node, and, of course, where you're connecting the
                  node. For more information on how to connect shaders using the render tree, see <span class="char_link"><a href="rendertree_ConnectingShaderNodes.htm#WS0BA946C0C7F07C489426C340C08C4904-004B">Connecting Nodes</a></span>. 
               </p> 
               <div class="section"><span class="anchor_wrapper"><a name="WS0BA946C0C7F07C489426C340C08C4904-003E"></a></span> 
                  <h3><span class="anchor_wrapper"><a name="GUID-1A4E1F54-F8E2-4D42-A6EF-99C7392208C3"></a></span>Multiple Output Ports
                  </h3> 
                  <p><span class="anchor_wrapper"><a name="GUID-836F30DC-B865-43F9-910B-4473A2C9656C"></a></span>Some shader nodes have multiple output ports (also known as multi-output nodes). These
                     nodes can extend the power of the render tree significantly, because the information
                     calculated by the shader can be extracted to multiple data channels, and each channel
                     can be used separately (with its own data type), instead of being combined into a
                     single output. Multi-output nodes can serve several functions, such as the Particle
                     Density shader that outputs both color and density at the same time to define the
                     volume of a point cloud, or the RGBA Split shader that splits a texture's colors and
                     alpha into separate outputs to be used elsewhere in the render tree, and so forth.
                     
                  </p> <span class="anchor_wrapper"><a name="FIG_77569B7790A746229F4E138114885567"></a></span><div class="figure-anchor"><img src="../images/GUID-9FDF5519-84F2-472A-9A32-160B576608A0-low.png"></div> 
               </div> 
               <div class="section"><span class="anchor_wrapper"><a name="WS0BA946C0C7F07C489426C340C08C4904-0040"></a></span> 
                  <h3><span class="anchor_wrapper"><a name="GUID-2771B9B5-E744-4F2D-9322-6612F5DBF689"></a></span>Port Groups
                  </h3> 
                  <p><span class="anchor_wrapper"><a name="GUID-194BD7A1-AB8C-423E-BCDB-5E45A09BA915"></a></span>When a shader has a large number of parameters, their ports are grouped in the shader's
                     render tree node. This is also true of texture layers that you add to a given node,
                     each of which belongs to is own port group. 
                  </p> <span class="anchor_wrapper"><a name="FIG_5A615067EBC34F35BC7512A015BE4C39"></a></span><div class="figure-anchor"><img src="../images/GUID-BC070513-8DEA-423B-A643-A6C7EEE52C35-low.png"></div> <span class="anchor_wrapper"><a name="TABLE_55B78EE214A54CC3B4F55F649DD3EDBA"></a></span><div class="table_Ruled">
                     <table cellpadding="0" cellspacing="0" class="ruled">
                        <colgroup>
                           <col>
                           <col>
                        </colgroup>
                        <tr class="ruledOddRow">
                           <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-9F32DBB2-562A-4F50-95BF-38348B2AE5FE"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-16E5A5E4-C1F6-409D-BC83-2F0AB6E41682">A</span> 
                              </p> 
                           </td>
                           <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-A30C624E-6294-47C7-A716-2804C1EECA4D"></a></span><p class="table-body">Expanded port group </p> 
                           </td>
                        </tr>
                        <tr class="ruledEvenRow">
                           <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-BB3A01E7-472A-4B3E-85B7-61EB910FF024"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-89AA9406-362A-444E-BF2D-F96D2DFB0C9E">B</span> 
                              </p> 
                           </td>
                           <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-882FE8E0-5E5E-4068-A11A-DFB127966E84"></a></span><p class="table-body">Ports </p> 
                           </td>
                        </tr>
                        <tr class="ruledOddRow">
                           <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-D641375E-4BF5-48D4-A8E1-2BEA7FFC4BE1"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-85C34F25-0DEB-4A57-A2BD-D3E9AA8FDD54">C</span> 
                              </p> 
                           </td>
                           <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-329CAA38-1325-4679-9DD4-823443AF6422"></a></span><p class="table-body">Collapsed port groups </p> 
                           </td>
                        </tr>
                        <tr class="ruledEvenRow">
                           <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-B3361C7E-DCBE-4232-B962-D737039DFB80"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-CDCE9489-AF5C-4CD7-B557-3000434B2A5D">D</span> 
                              </p> 
                           </td>
                           <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-02FE2A09-F699-4F89-AB0A-AAB7122FD06A"></a></span><p class="table-body">Layers section </p> 
                           </td>
                        </tr>
                        <tr class="ruledOddRow">
                           <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-C3C01FC9-7F19-42EC-B496-C82517DCF2B5"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-927D6DFC-BC27-44D5-8AD0-C987ECBF67DB">E</span> 
                              </p> 
                           </td>
                           <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-E6FB8C03-D331-4DB6-8B82-E6DA16376DC7"></a></span><p class="table-body">Expanded texture layer </p> 
                           </td>
                        </tr>
                     </table>
                  </div> 
                  <p><span class="anchor_wrapper"><a name="GUID-E73C7AD5-38D8-457E-8576-AACF3FD5BF22"></a></span>For information about collapsing and expanding port groups and texture layers, see
                     <span class="char_link"><a href="rendertree_WorkingwithShaderNodes.htm#WS0BA946C0C7F07C489426C340C08C4904-0078">Collapsing and Expanding Port Groups and Texture Layers</a></span>. 
                  </p> 
                  <p><span class="anchor_wrapper"><a name="GUID-95297F1D-ECA4-476F-970F-09B1323CFDDA"></a></span>For more information about connecting nodes to parameters in groups, see <span class="char_link"><a href="rendertree_ConnectingShaderNodes.htm#WS0BA946C0C7F07C489426C340C08C4904-0053">Inserting Nodes</a></span>. 
                  </p> 
                  <p><span class="anchor_wrapper"><a name="GUID-83DFA5B0-B96C-48C3-AE1C-B60C26531F52"></a></span>For more information about texture layers in the render tree, see <span class="char_link"><a href="tex_tle_WorkingwithTextureLayersintheRenderTree.htm">Working with Texture Layers in the Render Tree</a></span>. 
                  </p> 
               </div> 
               <div class="section"><span class="anchor_wrapper"><a name="WS0BA946C0C7F07C489426C340C08C4904-0042"></a></span> 
                  <h3><span class="anchor_wrapper"><a name="GUID-DD8758A9-AC3F-4998-A86B-307C6A289629"></a></span>Dynamic Input Ports and Port Groups
                  </h3> 
                  <p><span class="anchor_wrapper"><a name="GUID-E5C7F4BD-CD25-4F38-BFA8-7CA88B141641"></a></span>Many shader nodes allow you to add input ports and port groups directly from the shader
                     node in the render tree. You do not have to open the shader's property editor to access
                     these controls. Although you will still have to open the property editor if you want
                     to set static values, as opposed to driving the input values by other shaders. The
                     workflow you choose is completely up to you. 
                  </p> 
                  <p><span class="anchor_wrapper"><a name="GUID-E510E5F1-868B-448D-8E4E-68022DCBD3D8"></a></span>In the render tree, dynamic ports and port groups can be created for lens shaders
                     stacks, pass shaders stacks, texture layers, render channels (see the share shaders),
                     and for a variety of input values (see the switch shaders). 
                  </p> <span class="anchor_wrapper"><a name="FIG_C28281DE185649818002B7287E5E16B6"></a></span><div class="figure-anchor"><img src="../images/GUID-0E620EE2-F5F0-4180-8328-6996B0D918DD-low.png"></div> 
                  <div class="section"><span class="anchor_wrapper"><a name="WS0BA946C0C7F07C489426C340C08C4904-0044"></a></span> 
                     <h4><span class="anchor_wrapper"><a name="GUID-75E57C46-C499-4FBB-BF2C-CA83D5E7AC5E"></a></span>To add input ports to shader nodes in the render tree
                     </h4> <span class="anchor_wrapper"><a name="GUID-59EFD106-DD83-4489-BB2F-F54BC837B33C"></a></span><ol type="1" start="1">
                        <li> 
                           <p><span class="anchor_wrapper"><a name="GUID-75E49D19-00C8-4672-9CB8-2A812A158DFA"></a></span>In the render tree workspace, set the shader node to its fully expanded state. 
                           </p> 
                        </li>
                        <li> 
                           <p><span class="anchor_wrapper"><a name="GUID-D101BAA3-5108-40A2-B912-68887899893D"></a></span>Right-click the port group label and select <span class="MenuCascade" id="GUID-39E34A68-A3F8-4775-BD3D-449AF5E3ECED">Add Item</span>. 
                           </p> 
                        </li>
                        <li> 
                           <p><span class="anchor_wrapper"><a name="GUID-3249BDDA-4420-49B0-927A-EDC8C4840850"></a></span>A port or another port group named "<span class="MenuCascade" id="GUID-9A7F70C0-723E-4ED8-A892-ABDF392D18AC">Item</span>" is added to the shader node. 
                           </p> 
                        </li>
                        <li> 
                           <p><span class="anchor_wrapper"><a name="GUID-70903576-4488-4305-B16E-ED5ECA5BC827"></a></span>Right-click an input port and select a shader from the pop-up menu, or select <span class="MenuCascade" id="GUID-CB795CE3-20A6-41FD-B550-54E833FA37BA">More...</span> to locate other shaders. 
                           </p> 
                        </li>
                        <li> 
                           <p><span class="anchor_wrapper"><a name="GUID-A8DE796A-00C0-430A-B5A0-781E80043203"></a></span>Repeat this task to add as many ports and shaders as you require for your effect.
                              
                           </p> 
                        </li>
                        <li> 
                           <p><span class="anchor_wrapper"><a name="GUID-0A78FBC3-7087-4CF0-92CB-4E96F35688FA"></a></span>To change the order of evaluation for a port or port group in the list, right-click
                              it and select <span class="MenuCascade" id="GUID-0448CB33-0262-4C0C-B720-0E5BCD172DB2">Move Up</span> or <span class="MenuCascade" id="GUID-866F3813-53F8-46ED-84A0-1020EF92B8CC">Move Down</span>. 
                           </p> 
                        </li>
                        <li> 
                           <p><span class="anchor_wrapper"><a name="GUID-33D0C1BB-A7A0-44ED-BE26-84381A62860A"></a></span>To delete a port or port group from the list, right-click it and select <span class="MenuCascade" id="GUID-F2306105-33A9-4FE7-A550-C6D6E9C3DCC1">Remove</span>. Once a port is removed from the list, it no longer influences the effect. 
                           </p> 
                        </li>
                     </ol> 
                  </div> 
               </div> 
            </div>
         </div>
         <div class="footer-block"><a href="../html/ac.cmtdialog.htm" class="comments-anchor" target="_blank"><span class="comments-link">Please send us your comment about this page</span></a></div><br><p class="footer-license-block"><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"><img alt="Creative Commons License" style="border-width: 0;" src="../images/ccLink.png"></a>&nbsp;<em>Except where otherwise noted, this work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>. Please see the <a href="http://autodesk.com/creativecommons" target="_blank">Autodesk Creative Commons FAQ</a> for more information.</em></p><br></div>
   </body>
</html>