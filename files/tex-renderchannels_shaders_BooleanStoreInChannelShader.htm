<!DOCTYPE html>

<!-- saved from url=(0024)http://docs.autodesk.com -->
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <meta name="product" content="SI">
      <meta name="release" content="2015">
      <meta name="book" content="GeneralUser">
      <meta name="created" content="2014-03-26">
      <meta name="topicid" content="GUID-A479E260-E55A-470F-B0D7-28D648746EC1">
      <meta name="topic-type" content="concept">
      <title>Store Boolean in Channel</title>
      <link rel="stylesheet" type="text/css" href="../style/softimage.css"><script type="text/javascript" src="../scripts/ac_common.js"></script><script type="text/javascript" src="../scripts/utils/adsk.redirect.js"></script></head>
   <body height="100%">
      <div class="body_content" id="body-content"><span class="anchor_wrapper"><a name="GUID-A479E260-E55A-470F-B0D7-28D648746EC1"></a></span><div class="head">
            <h1>Store Boolean in Channel</h1>
         </div>
         <div class="bodyProcess">
            <p><span class="anchor_wrapper"><a name="GUID-AB574205-E0C7-458A-9955-BC8C9FA53B22"></a></span> <em class="strong">Category:</em> Data &gt; Render Channel
            </p>
            <p><span class="anchor_wrapper"><a name="GUID-088524B4-4C65-41DB-8056-7382C072027D"></a></span> <em class="strong">Shader Family:</em> Texture
            </p>
            <p><span class="anchor_wrapper"><a name="GUID-76F1F2BB-E57F-4553-BEDD-674B48C72CE0"></a></span> <em class="strong">Output:</em> Boolean
            </p>
            <p><span class="anchor_wrapper"><a name="GUID-53B02222-B4E7-4BA5-A9CC-85A443410495"></a></span>Lets you isolate boolean data anywhere in a render tree and pipe it through to a render
               channel that supports a boolean data type.
            </p>
            <p><span class="anchor_wrapper"><a name="GUID-1F1B6282-5159-4446-A41D-F915FE158A21"></a></span>For more information, see <span class="char_link"><a href="renderchannels_RenderingCustomChannels.htm">Working With Custom Channels</a></span> [<span class="char_link"><a href="render_cover.htm">Rendering</a></span>].
            </p>
            <div class="table_Ruled">
               <table cellpadding="0" cellspacing="0" class="ruled">
                  <colgroup>
                     <col width="220px" align="left">
                     <col align="left">
                  </colgroup>
                  <tr class="ruledOddRow">
                     <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-2E834901-AE09-4A4A-9BA7-56387870CFA2"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-E759D6B6-B817-497C-8ECF-27ECBAD44995">Name</span> 
                        </p> 
                     </td>
                     <td class="table-body" align="left"> <span class="anchor_wrapper"><a name="GUID-06B4E254-EC5B-45F5-BDBD-C45D88171203"></a></span><p class="table-body">The shader's name. Enter any name you like, or leave the default.</p> 
                     </td>
                  </tr>
                  <tr class="ruledEvenRow">
                     <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-72FF10B6-E11A-4431-B646-941ECEDE2AE8"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-A437B6EB-99E5-4412-97D3-C2F5E86478C9">Input</span> 
                        </p> 
                     </td>
                     <td class="table-body" align="left"> <span class="anchor_wrapper"><a name="GUID-FBE21D02-C44D-4384-9052-4E252C133FEA"></a></span><p class="table-body">Represents an input that corresponds to a 0 or 1 (On/ Off or True/False). This value
                           is usually driven by a shader connected to the <span class="MenuCascade" id="GUID-F3A86992-0FD4-4C73-B2D1-ADAA2B7A0967">input</span> parameter port.
                        </p> 
                     </td>
                  </tr>
                  <tr class="ruledOddRow">
                     <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-6C94F518-721C-4645-8C32-91CE14B81A34"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-40D919BA-960A-4AF4-9A46-6BC4C15711FB">Render Channel</span> 
                        </p> 
                     </td>
                     <td class="table-body" align="left"> <span class="anchor_wrapper"><a name="GUID-50535183-5DC3-48DA-92E4-8441FE43D08E"></a></span><p class="table-body">Specify which render channel will be used to store and output the data intercepted
                           by this Store In Channel shader.
                        </p> 
                     </td>
                  </tr>
                  <tr class="ruledEvenRow">
                     <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-E8B7CA5B-6255-4B91-B940-92557312F2DC"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-BB4DFD3E-BDE0-40B1-8ED1-35DBBC2825EA">Add...</span> 
                        </p> 
                     </td>
                     <td class="table-body" align="left"> <span class="anchor_wrapper"><a name="GUID-CD615D65-3735-4940-BE22-165B5E5D40D2"></a></span><p class="table-body">Adds a custom render channel of a grayscale data type to the scene's Available Channels
                           grid. See <span class="char_link"><a href="renderchannels_RenderingCustomChannels.htm#WSC3E5E55625BD5A41A60AC47CADE8610F-000D">Creating a Custom Render Channel for the Scene</a></span> [<span class="char_link"><a href="render_cover.htm">Rendering</a></span>].
                        </p> <span class="anchor_wrapper"><a name="GUID-93C82565-C221-470E-B6B0-756207876B02"></a></span><p class="table-body">This render channel must also be added to the pass to render the ouput. See <span class="char_link"><a href="renderchannels_RenderingBuiltInandPresetChannels.htm#WSC3E5E55625BD5A41A60AC47CADE8610F-0007">Adding a Render Channel for the Pass</a></span> [<span class="char_link"><a href="render_cover.htm">Rendering</a></span>].
                        </p> 
                     </td>
                  </tr>
                  <tr class="ruledOddRow">
                     <td class="table-body"> <span class="anchor_wrapper"><a name="GUID-0887684B-4B10-40CB-85DB-B407B65516C9"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-6DE97534-C4C8-4CA9-81FF-F0CDBC7D4A4E">Store with Ray Type</span> 
                        </p> 
                     </td>
                     <td class="table-body" align="left"> <span class="anchor_wrapper"><a name="GUID-8DBC068D-8E14-4381-830A-9400C20DC5CD"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-F4F9CA10-010D-4C17-AA75-663916AC6EBC">Primary:</span> Stores all eye rays shot from the camera.
                        </p> <span class="anchor_wrapper"><a name="GUID-E47D0004-4005-40A5-B11B-BAF39AE9FA88"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-B9B3F50D-1ADF-4A21-9DDD-F959A88C8E59">Primary and Transparency:</span> Stores all primary (eye) rays as well as transparency rays. Transparency rays are
                           a type of secondary ray, but they do not allow control over the ray direction.
                        </p> <span class="anchor_wrapper"><a name="GUID-37F0DF79-5076-4F45-9629-254BB651F7D9"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-63F6241E-8C2F-4AEF-88A0-70168254D0BE">Any Secondary:</span> Stores all rays generated at an intersection point (when the primary ray hits an
                           object) such as reflection, refraction, transparency, light, and shadow rays.
                        </p> <span class="anchor_wrapper"><a name="GUID-BC06190F-19B7-4D9E-871F-3341C52CB333"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-53E1D52B-5E1A-428B-B734-4EA9F320671C">Reflection:</span> Stores all reflection rays cast by a material shader.
                        </p> <span class="anchor_wrapper"><a name="GUID-7EFC57A8-BFA5-4B4B-B505-558A7416229B"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-DF451541-7A4A-4B70-9D57-9932D657F763">Refraction:</span> Stores all refraction rays cast by a material shader.
                        </p> <span class="anchor_wrapper"><a name="GUID-E015B328-9DAB-419C-A90B-D6B78266BA83"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-65D5CE3A-3B2C-4D73-AA65-9591DF3F76FF">Transparency:</span> Stores all transparency rays cast by a material shader.
                        </p> <span class="anchor_wrapper"><a name="GUID-5D5A5E8D-DE6A-46DC-9016-4E6E5E92B1D0"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-B1E65ED2-83E6-4E18-BCBE-56F2B8195B4F">Shadow:</span> Stores all shadow rays cast from the light source back towards the illuminated point
                           (or vice versa if shadow segment mode is enabled), in the same direction of the light
                           ray.
                        </p> <span class="anchor_wrapper"><a name="GUID-2138F660-05C6-4245-9E43-62CB006116AD"></a></span><p class="table-body"> <span class="MenuCascade" id="GUID-8FDEA95B-B02B-472D-B76F-2E21CDFED063">Environment:</span> Stores all rays that sample an environment (reflection) map.
                        </p> 
                     </td>
                  </tr>
               </table>
            </div>
         </div>
         <div class="footer-block"><a href="../html/ac.cmtdialog.htm" class="comments-anchor" target="_blank"><span class="comments-link">Please send us your comment about this page</span></a></div><br><p class="footer-license-block"><a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank"><img alt="Creative Commons License" style="border-width: 0;" src="../images/ccLink.png"></a>&nbsp;<em>Except where otherwise noted, this work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/" target="_blank">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</a>. Please see the <a href="http://autodesk.com/creativecommons" target="_blank">Autodesk Creative Commons FAQ</a> for more information.</em></p><br></div>
   </body>
</html>